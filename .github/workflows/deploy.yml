name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        # 코드 저장소를 체크아웃함

      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
        # Amazon Corretto JDK 17을 설정함

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        # Gradle wrapper 파일에 실행 권한을 부여함

      - name: Build with Gradle
        run: ./gradlew clean build
        # Gradle을 사용하여 프로젝트를 빌드


      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}


      - name: Docker build
        run: |
          docker build -t travelday .
          docker tag travelday ghcr.io/ss0ming/travelday:latest
          docker push ghcr.io/ss0ming/travelday:latest
        # 도커 이미지 빌드하고 push

      - name: List build directory
        run: ls -al build/libs
#
#      - name: Upload build artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: build-artifact
#          path: build/libs/TravelDay-0.0.1-SNAPSHOT.jar
#        # 빌드된 JAR 파일을 아티팩트로 업로드함

      # Beanstalk 플러그인을 사용
      # 미리 생성해둔 IAM 인증키를 사용
#      - name: Beanstalk Deploy
#        uses: einaregilsson/beanstalk-deploy@v20
#        with:
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          application_name: TravelDay
#          environment_name: TravelDay-env
#          region: ap-northeast-2
#          deployment_package: Dockerrun.aws.json
#
      - run: |
          mkdir -p ~/.aws
          echo "[eb-cli]
          aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" > ~/.aws/credentials 
          
          curl -O https://bootstrap.pypa.io/get-pip.py
          python get-pip.py --use
          pip install awsebcli --upgrade --user
          eb --version
          eb deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-2